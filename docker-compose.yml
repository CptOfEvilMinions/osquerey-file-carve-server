version: "2.2"
services: 
  ############################################## NGINX ##############################################
  nginx:
    build: 
      context: .
      dockerfile: docker/Dockerfile-nginx
    container_name: kolide-nginx
    restart: unless-stopped
    ports: 
      - 8000:80
      - 8443:443
    networks: 
      - default
      - kolide-backend
    depends_on: 
      - kolide

  ############################################## Kolide ##############################################
  kolide:
    build: 
      context: .
      dockerfile: docker/Dockerfile-kolide
    container_name: kolide-webgui
    restart: unless-stopped
    volumes: 
      - kolide-logs:/var/log/osquery
    networks: 
      - kolide-backend
    depends_on:
      - mysql
      - redis

  ############################################## MySQL ##############################################
  mysql:
    build: 
      context: .
      dockerfile: docker/Dockerfile-mysql
    container_name: kolide-mysql
    restart: unless-stopped
    environment: 
      MYSQL_ROOT_PASSWORD: kolide
      MYSQL_DATABASE: kolide
      MYSQL_USER: kolide
      MYSQL_PASSWORD: kolide
    volumes: 
      - kolide-db:/var/lib/mysql
    networks: 
      - kolide-backend


  ############################################## Redis ##############################################
  redis:
    image: redis:latest
    container_name: kolide-redis
    restart: unless-stopped
    networks: 
      - kolide-backend
  
  ############################################## Upload server ##############################################
  osquery_file_carve_server:
    build:
      context: .
      dockerfile: docker/Dockerfile-osquery-file-carve-server
    container_name: osquery-file-carve-server
    restart: unless-stopped
    environment: 
      - PORT=8000
    networks: 
      - kolide-backend
  
  
  ############################################## Test server ##############################################
  # python_test_server:
  #   build:
  #     context: .
  #     dockerfile: docker/Dockerfile-test-server
  #   container_name: python-test-server
  #   restart: unless-stopped
  #   environment: 
  #     - FLASK_APP=python3_simple_http_server.py
  #     - FLASK_HOST=0.0.0.0
  #     - FLASK_PORT=8000
  #   networks: 
  #     - kolide-backend


volumes:
  kolide-db:
  kolide-logs:


networks:
  kolide-backend: